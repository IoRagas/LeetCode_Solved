/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        if(root1 == nullptr && root2 == nullptr)
            return nullptr;
        if(root1 == nullptr && root2 != nullptr)
            return root2;
        if(root1 != nullptr && root2 == nullptr)
            return root1;
                
        int sum = 0; 
        if(root1)
            sum += root1->val;
        if(root2)
            sum+= root2->val;
        root1->val = sum;

        //Go Left
        root1->left = mergeTrees(root1 ? root1->left : NULL, root2 ? root2->left : NULL);
        root1->right = mergeTrees(root1 ? root1->right : NULL, root2 ? root2->right : NULL);

        return root1;
    }
};
