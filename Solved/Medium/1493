//This is what happens when you dont read the problem statement properly
class Solution {
public:
    int longestSubarray(vector<int>& nums) {
        int ans = 0;
        vector<int> temp;
        int count = 0;
        int prev = 0;
        bool zero = false;
        int length = 0;
        for(auto &v : nums)
        {
            if(v == 1)
            {
                count++;
                length = max(length, count);
                prev = 0;
            } 
            else if(v == 0)
            {
                zero = true;
                prev++;
                if(prev >= 3) continue;
                temp.push_back(count);
                temp.push_back(0);
                count = 0;
            }
        }
        temp.push_back(count);

        if(temp.size() <= 2){
            temp.push_back(0);
            temp.push_back(0);
        }
        for(int i = 0; i < temp.size() - 2; i++)
            ans = max(ans, temp[i] + temp[i + 1] + temp[i + 2]);
        for(auto &v : temp) cout<<v<<" ";
        if(zero == false)
        {
            for(auto &v : temp)
            {
                if(v == 0) continue;
                if(v != length) return length;
            }
            ans = length - 1;
        }
        return ans;
    }
};
