/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans = 0;
    int func(TreeNode* curr, long long n)
    {
        if(curr == nullptr) return 0;
        n = n * 10 + curr->val;
        if(curr->left == nullptr && curr->right == nullptr)
            ans += n;
        func(curr->left, n);
        func(curr->right, n);
        return 0;
    }
    int sumNumbers(TreeNode* root) {
        func(root->left, root->val);
        func(root->right, root->val);
        if(root->left == nullptr && root->right == nullptr) return root->val;
        return ans;
    }
};
