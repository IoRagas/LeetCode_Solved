//A simple Summation Problem (Precompute The Sums of top and bottom of the hourglass)
class Solution {
public:
    int maxSum(vector<vector<int>>& grid) {
        vector<vector<int>> table(grid.size(), vector<int>(grid[0].size()));

        for(int i = 0 ; i < grid.size(); i++)
        {
            for(int j = 1; j  < grid[0].size() - 1; j++)
                table[i][j] = grid[i][j] + grid[i][j-1] + grid[i][j + 1];
        }
        int ans = 0;
        for(int i = 1; i < grid.size() - 1; i++)
        {
            for(int j = 1; j < grid[0].size() - 1; j++)
            {
                ans = max(ans, grid[i][j] + table[i - 1][j] + table[i + 1][j]);
            }
        }
        return ans;
    }
};
