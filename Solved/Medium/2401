class Solution {
public:
    int longestNiceSubarray(vector<int>& nums) {
        int start = 0;
        int end = 1;
        vector<int> table(32);
        int ans = 1;
        for(int i = 0; i <= 31; i++)
            table[i] = nums[0] & (1 << i) ? 1 : 0;
        while(end < nums.size())
        {
           // cout<<start<<" "<<end<<endl;
            int count = 0;
            for(int i = 0; i <= 31; i++)
            {
                if(nums[end] & (1 << i)) table[i]++;
                else continue;
                if(table[i] > 1) count++;;
            }
            
            if(count > 0)
            {
                while(start < end && count > 0){
                    int n = nums[start];
                    for(int i = 0; i <= 31; i++){
                        if( n & (1 << i) )
                        {
                        if(table[i] == 2 ){
                            table[i] -= 1;
                            count--;
                        }else
                            table[i] -= 1;
                        }
                    }
                    start++;
                }
            }
            ans = max(ans, end - start + 1);
            end++;
        }
        return ans;
    }
};
