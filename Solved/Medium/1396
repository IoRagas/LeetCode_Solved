class UndergroundSystem {
public:
    unordered_map<int, pair<string, int>> table;
    unordered_map<string, unordered_map<string, pair<int, int>>> avg;
    UndergroundSystem() {
    }
    
    void checkIn(int id, string stationName, int t) {
        table[id] = {stationName, t};
    }
    
    void checkOut(int id, string stationName, int t) {
        auto [start, stime] = table[id];
        if(avg[start].find(stationName) == avg[start].end() ) //First Check out for this station
            avg[start][stationName] = {t - stime, 1};
        else
            {
                avg[start][stationName].first += (t - stime);
                avg[start][stationName].second++;
            }
    }
    
    double getAverageTime(string startStation, string endStation) {
        auto [sum, count] = avg[startStation][endStation];
        return (double)sum / count;
    }
};

/**
 * Your UndergroundSystem object will be instantiated and called as such:
 * UndergroundSystem* obj = new UndergroundSystem();
 * obj->checkIn(id,stationName,t);
 * obj->checkOut(id,stationName,t);
 * double param_3 = obj->getAverageTime(startStation,endStation);
 */
