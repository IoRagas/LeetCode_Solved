/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans = 0;
    int func(TreeNode* curr)
    {
        if(curr == nullptr) return 0;
        
        int left = func(curr->left);
        int right = func(curr->right);
        if(left < 0) left = 0;
        if(right < 0) right = 0;
        int sum = left + right + curr->val;
        
        ans = max(ans, sum);

        return curr->val + max(left, right);
    }
    int maxPathSum(TreeNode* root) {
        ans = root->val;
        func(root);
        return ans;
    }
};
