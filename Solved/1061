class Solution {
public:
    string smallestEquivalentString(string s1, string s2, string baseStr) {
        string ans = "";
        int table[26][26] = {0};
        for(int i = 0; i < s1.size(); i++)
        {
            // Same Characters, Cycle
            if(s1[i] == s2[i]) continue;

            table[s1[i] - 'a'][s2[i] - 'a'] = 1;
            table[s2[i] - 'a'][s1[i] - 'a'] = 1;
        }
        for(int k = 0; k < 26; k++) {
        for(int i = 0; i < 26; i++) {
        for(int j = 0; j < 26; j++) {
            if(table[i][k] && table[k][j])
                table[i][j] = 1;
                }
            }
        }
         for(int k = 0; k < 26; k++) {
        for(int i = 0; i < 26; i++) {
            cout<<table[k][i]<<" "; } cout<<endl;}
        for(int i = 0; i < baseStr.size(); i++)
        {
            int x = baseStr[i] - 'a';
            char end = baseStr[i];
            for(int j = 0; j < 26 ; j++){
                if(table[x][j] == 1){
                    end = ('a' + j);
                    break;
                }
            }
            ans += end;
        }
        return ans;
    }
};
